exports.ids=[2],exports.modules={31:function(t,e,o){"use strict";o.r(e);var n=o(9);var r={namespaced:!0,state:()=>({count:0,isLoading:!1}),mutations:{SET_COUNT(t,e){t.count=e},SET_LOADING(t,e){t.isLoading=e}},actions:{GET_COUNT:({state:t,commit:e})=>!t.isLoading&&new Promise(t=>{e("SET_LOADING",!0),setTimeout(()=>{let o=10*Math.random()>>0;e("SET_COUNT",o),e("SET_LOADING",!1),t(o)},1500)})}},c={async asyncData({store:t}){},async fetch({app:t,store:e}){t.$registerModule(e,{Counter:r}),await e.dispatch("Counter/GET_COUNT")},async beforeCreate(){this.$registerModule(this.$store,{Counter:r})},beforeDestroy(){this.$unregisterModule(this.$store,["Counter"])},data:()=>({title:"About"}),computed:{count:{...Object(n.mapState)("Counter",{get:"count"}),...Object(n.mapMutations)("Counter",{set:"SET_COUNT"})}},methods:{...Object(n.mapActions)("Counter",{getCount:"GET_COUNT"})},head(){return{title:this.title}}},d=o(1);var component=Object(d.a)(c,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("div",[t._ssrNode("<h1>About</h1> <p>"+t._ssrEscape(t._s(t.$store.state.message))+"</p> "+(t.$store.state.Counter?t.$store.state.Counter.isLoading?"<div><h2>Loading...</h2></div>":"<div><h2>"+t._ssrEscape(t._s(t.count))+"</h2> <p><button>-</button> <button>+</button></p> <p><button>Get Count</button></p></div>":"\x3c!----\x3e"))])}),[],!1,(function(t){}),null,"4d6609b0");e.default=component.exports}};